Judicial Power Ranking in Latin America
========================================================
author: Tomas Mawyin
date: November 19, 2015
font-family: 'Arial'

Objectives
========================================================

The main goal of this data product is to provide a visualization application 
that would allow users from Latin American countries to understand their 
Judicial Power and how it ranks in relation to other countries.

In addition this tool aims to:

- Provide a comparison tool using a map and a bar chart.
- Give a tool that can be easily modified to include other countries or rankings.


Application
========================================================

The application is developed using shiny and can be used as followed:

- Two tabs provide the user different display methods, a bar plot or an 
interactive map created using Leaflet.
- A selection tool let's the user pick between the different metrics used in the
rankings.
- A slider bar allows the user to compare as many as 25 countries in a bar plot.
- Additional information can be found on the "About" tab. 

Code Example
========================================================

The following is an example of the data collected.

```{r, echo=FALSE, warning=FALSE, message=FALSE}
## Libraries
library(rgdal)
library(ggplot2)
library(tidyr)
library(dplyr)
library(xlsx)
```

```{r loadData, echo=TRUE, warning=FALSE}
## Loading the data
data <- read.xlsx2("data/JudicialPowerRanking.xlsx", header = FALSE, startRow = 3, endRow = 88, sheetIndex = 1, stringsAsFactors = FALSE)

```
```{r, echo = FALSE}
data.countries <- read.xlsx2("data/JudicialPowerRanking.xlsx", header = FALSE, 
                   startRow = 1, endRow = 1, sheetIndex = 1, stringsAsFactors = FALSE)


## Adding the country names, and removing unnecessary columns
colnames(data)[4:28] <- data.countries[4:28]
colnames(data)[1] <- "Type"
## Let's remove the questions and the ID
data <- data[,c(1,4:28)]

## Convering values to numeric type
data[, 2:26] <- sapply(data[, 2:26], as.numeric)
data[,1] <- sapply(data[, 1], as.factor)

## Let's remove NAs
data <- data %>% filter(!is.na(data[,2]))
```
```{r, echo=FALSE}
# Melt data
data.melted <- data %>% gather(key = Country, value = Value, -Type)
# Summarize.
data.summary <- data.melted %>% group_by(Type, Country) %>% summarise(Total = sum(Value))
summary(data.summary)
```

Bar Chart Example
========================================================

The following is an example of the bar code shown in the application. The plot 
contains a comparison of the top 20 countries in one of the metrics measured to 
obtain the ranking.

```{r filterData, echo = FALSE}
# Let's have a varible displaying the type of data
type <- unique(data.summary$Type)

# Let's filter the data based on the information type. Change this value from
# 1 to 6 based on the type you want to display
data.display <- data.summary %>% filter(Type == type[1])
data.ordered <- data.display %>% arrange(desc(Total))
data.ordered <- data.ordered[seq(1,20),]
ggplot(data.ordered, aes(x=factor(Country), y=Total)) +
    geom_bar(stat="identity", fill="blue") +
    labs(title = "Judicial Power Rankings") +
    labs(x = "Country", y= "Score") + 
    theme_classic(base_family = "Arial") +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
```